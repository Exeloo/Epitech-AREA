# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Applet"""
type Applet {
  """ID of the applet"""
  id: Int!

  """Name of the applet"""
  name: String!
}

"""Input type to subscribe to an applet"""
input AppletSubscribeInput {
  """ID of the channel to listen messages"""
  channelIdInput: String!

  """ID of the channel to write the message"""
  channelIdOutput: String!

  """ID of the guild to listen messages"""
  guildIdInput: String!

  """ID of the guild to write the message"""
  guildIdOutput: String!

  """Message to write when the trigger is called"""
  message: String!

  """Name that the user give to the applet"""
  name: String!
}

"""Input type for auth with password strategy"""
input AuthPasswordInput {
  """Email address to auth with"""
  email: String!

  """Password to auth with"""
  password: String!
}

"""Input type for refresh access token"""
input AuthRefreshTokenInput {
  """
  Refresh token that was generated by api and store by the user along the outdated access token
  """
  refreshToken: String!
}

"""Response type for auth"""
type AuthTokenResponse {
  """
  Refresh token for the client to use to refresh the access token when it is outdated
  """
  refreshToken: String!

  """Access token for the client to use to make others requests"""
  token: String!

  """
  Access token expiration date in the time zone of the server (currently timezone of Paris)
  """
  tokenExpiresAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  """Mutation used to create a provider as admin"""
  createProvider(data: ProviderCreateInput!): Provider!

  """Mutation used to subscribe to an applet"""
  subscribeToProvider(data: AppletSubscribeInput!): Applet!
}

"""Provider"""
type Provider {
  """ID of the provider"""
  id: Int!

  """Manifest of the provider"""
  manifest: ProviderManifest!

  """Visibility of the provider"""
  visibility: ProviderVisibility!
}

"""Input type to create provider"""
input ProviderCreateInput {
  """Host of the provider to create"""
  host: String!

  """Foreign id of the provider to create"""
  providerId: String!

  """Visibility of the provider to create"""
  visibility: ProviderVisibility!
}

"""Provider Manifest"""
type ProviderManifest {
  """Actions of the provider"""
  actions: [ProviderManifestAction!]!

  """Description of the provider"""
  description: String!

  """Image that describe the provider"""
  img: String!

  """Name of the provider"""
  name: String!

  """Triggers of the provider"""
  triggers: [ProviderManifestTrigger!]!
}

"""Action Provider Manifest"""
type ProviderManifestAction {
  """Description of the action"""
  description: String!

  """ID of the action"""
  id: String!

  """Image that describe the action"""
  img: String!

  """Input of the action"""
  input: JSON!

  """Name of the action"""
  name: String!

  """Output of the action"""
  output: JSON!
}

"""Trigger Provider Manifest"""
type ProviderManifestTrigger {
  """Description of the trigger"""
  description: String!

  """ID of the trigger"""
  id: String!

  """Image that describe the trigger"""
  img: String!

  """Input of the trigger"""
  input: JSON!

  """Name of the trigger"""
  name: String!

  """Output of the trigger"""
  output: JSON!
}

"""Visibility of the provider"""
enum ProviderVisibility {
  """Private provider, visible only to the owner"""
  PRIVATE

  """Public provider, visible to everyone"""
  PUBLIC

  """
  Unlisted provider, visible only to the owner but can be used by everyone
  """
  UNLISTED
}

type Query {
  """Get all applets"""
  getAllApplets: [Applet!]!

  """Get all providers"""
  getAllProviders: [Provider!]!

  """Get applet by id"""
  getAppletById(id: Int!): Applet!

  """Get provider by id"""
  getProviderById(id: Int!): Provider!

  """Query used to auth with password strategy"""
  login(data: AuthPasswordInput!): AuthTokenResponse!

  """Query used to refresh access token"""
  refreshToken(data: AuthRefreshTokenInput!): AuthTokenResponse!
}