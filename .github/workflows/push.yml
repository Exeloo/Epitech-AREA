name: Push CI/CD

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-DEV-500-PAR-5-2-area-matteo.emile.git"
  REGISTRY_URL: "registry.area.tech.showmyteam.fr"

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.11.0
      - name: Install Yarn
        run: "npm install -g yarn"
      - name: Install dependencies
        run: "yarn install"
      - name: Run tests
        run: "yarn test:unit"

  push:
    name: Build
    runs-on: ubuntu-latest

    needs: tests
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install Docker using Docker's official script
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: copy env.example to env
        run: cp apps/frontend/web/.env.example apps/frontend/web/.env
      - name: Build
        run: docker-compose --env-file .env.example build
      - name: Login to Docker Registry
#        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login ${{ env.REGISTRY_URL }} --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push Docker Images
#        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker images --format '{{.Repository}}:{{.Tag}}' | while read -r image; do
            image_name=$(echo "$image" | awk -F':' '{print $1}')
            docker tag "$image" "${{ env.REGISTRY_URL }}/$image_name:latest"
            docker push "${{ env.REGISTRY_URL }}/$image_name:latest"
          done

  push_to_mirror:
    name: "Pushing To The Mirror Repository"
    runs-on: ubuntu-latest

    needs: push
    if: github.event.repository.name != 'B-DEV-500-PAR-5-2-area-matteo.emile.git'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}