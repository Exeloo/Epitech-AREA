- name: Initialize the machine
  block:
    - name: Update
      apt:
        update_cache: yes

    - name: Upgrade
      apt:
        upgrade: yes

    - name: Install packages
      apt:
        name:
          - git
          - curl
          - bash
          - apt-transport-https
          - ca-certificates
          - software-properties-common
        state: latest

    - name: Set bash
      user:
        name: root
        shell: /bin/bash


- name: Load kernel modules for Kubernetes
  block:
    - name: Create kernel modules configuration file
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Load kernel modules
      shell: modprobe "{{ item }}"
      loop:
        - overlay
        - br_netfilter


- name: Set kernel parameters for Kubernetes
  block:
    - name: Create sysctl configuration file
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: Apply sysctl settings
      shell: sysctl --system


- name: Configuring containerd
  block:
    - name: Install containerd
      apt:
        name: containerd
        state: present
        update_cache: yes

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory

    - name: Generate default containerd configuration with systemd cgroup
      shell: containerd config default
      register: containerd_config

    - name: Modify containerd configuration to enable systemd cgroups
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout | regex_replace('SystemdCgroup = false', 'SystemdCgroup = true') }}"

    - name: Restart containerd service
      systemd:
        name: containerd
        state: restarted


- name: Install Kubernetes dependencies
  block:
    - name: Create directory for Kubernetes keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes apt repository
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /\n"

    - name: Download Helm installation script
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: '0755'

    - name: Run Helm installation script
      shell: /tmp/get_helm.sh
      args:
        creates: /usr/local/bin/helm
      register: helm_install_result
      changed_when: false

    - name: Add /usr/local/bin to PATH
      lineinfile:
        path: ~/.bashrc
        line: 'export PATH=$PATH:/usr/local/bin'
      when: helm_install_result.rc == 0

    - name: Install kubeadm, kubelet and kubectl
      apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - kubeadm
        - kubelet
        - kubectl